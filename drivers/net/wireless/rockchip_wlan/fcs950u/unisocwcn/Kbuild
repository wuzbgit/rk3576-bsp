#
# Module name
#
ifeq ($(COUSTOM_PLATFORM), unisoc)
KO_MODULE_NAME := wcn_bsp_ott
else
KO_MODULE_NAME := $(UNISOC_WCN_CHIP_ID)_bsp_$(UNISOC_WCN_HW_TYPE)
endif

$(info "$(KO_MODULE_NAME): $(COUSTOM_PLATFORM)_$(UNISOC_WCN_CHIP_ID)_$(UNISOC_WCN_HW_TYPE)")

#
# Build Options
#
# ------ coustom platform config start ------
ifeq ($(COUSTOM_PLATFORM), unisoc)
MARLIN_CFLAGS += -DCONFIG_UNISOC_BOARD
ifeq ($(UNISOC_WCN_CHIP_ID)_$(UNISOC_WCN_HW_TYPE), uwe5623_sdio)
MARLIN_CFLAGS += -DCONFIG_WCN_EXTERNAL_1V2_DCDC
MARLIN_CFLAGS += -DCONFIG_WCN_EXTERNAL_3V3_DCDC
endif
endif

ifeq ($(COUSTOM_PLATFORM), qcom)
MARLIN_CFLAGS += -DCONFIG_THIRD_PARTY_BOARD
MARLIN_CFLAGS += -DCONFIG_QCOM_BOARD
endif

ifeq ($(COUSTOM_PLATFORM), rk)
MARLIN_CFLAGS += -DCONFIG_THIRD_PARTY_BOARD
MARLIN_CFLAGS += -DCONFIG_RK_BOARD
endif

ifeq ($(COUSTOM_PLATFORM), mtk)
MARLIN_CFLAGS += -DCONFIG_THIRD_PARTY_BOARD
MARLIN_CFLAGS += -DCONFIG_MTK_BOARD
endif

ifeq ($(COUSTOM_PLATFORM), nxp)
MARLIN_CFLAGS += -DCONFIG_THIRD_PARTY_BOARD
MARLIN_CFLAGS += -DCONFIG_NXP_BOARD
endif

ifeq ($(COUSTOM_PLATFORM), asr)
MARLIN_CFLAGS += -DCONFIG_THIRD_PARTY_BOARD
MARLIN_CFLAGS += -DCONFIG_ASR_BOARD
endif
# ------ coustom platform config end ------

# ------ wcn chip id config start ------
ifeq ($(UNISOC_WCN_CHIP_ID), umw2652)
CONFIG_UMW2652 = y
# CONFIG_WCN_GNSS := y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_UMW2652
# MARLIN_CFLAGS += -DCONFIG_WCN_GNSS
endif

ifeq ($(UNISOC_WCN_CHIP_ID), umw2653)
CONFIG_UMW2653 = y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_UMW2653
endif

ifeq ($(UNISOC_WCN_CHIP_ID), uwe5621)
CONFIG_UMW2653 = y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_UMW2653
endif

ifeq ($(UNISOC_WCN_CHIP_ID), uwe5622)
CONFIG_UMW2652 = y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_UMW2652
endif

ifeq ($(UNISOC_WCN_CHIP_ID), uwe5623)
CONFIG_UMW2653 = y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_UMW2653
endif
# ------ wcn chip id config end ------

# ------ wcn hardware type config start ------
ifeq ($(UNISOC_WCN_HW_TYPE), sdio)
CONFIG_WCN_SDIO = y
CONFIG_WCN_SLP = y
# CONFIG_WCN_SWD = y
CONFIG_MEM_PD = y
CONFIG_WCN_UTILS ?= y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_WCN_SDIO
# MARLIN_CFLAGS += -DCONFIG_WCN_SWD
MARLIN_CFLAGS += -DCONFIG_MEM_PD
MARLIN_CFLAGS += -DCONFIG_WCN_SLP
endif

ifeq ($(UNISOC_WCN_HW_TYPE), usb)
CONFIG_WCN_USB = y
# CONFIG_WCN_SWD = y
CONFIG_WCN_UTILS = y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_WCN_USB
# MARLIN_CFLAGS += -DCONFIG_WCN_SWD
# MARLIN_CFLAGS += -DCONFIG_WCN_USB_CH25_USE_WORKQUEUE
# MARLIN_CFLAGS += -DCONFIG_WCN_USB_ALL_IN_ONE_TASKLET
MARLIN_CFLAGS += -DCONFIG_WCN_USB_USE_THREAD
MARLIN_CFLAGS += -DCONFIG_BUF_LIST_CHECK
MARLIN_CFLAGS += -DCONFIG_WCN_BT_HOST_WAKE
MARLIN_CFLAGS += -DCONFIG_WCN_WL_HOST_WAKE
endif

ifeq ($(UNISOC_WCN_HW_TYPE), pcie)
# TODO
CONFIG_WCN_PCIE = y
# add macro for build source files
MARLIN_CFLAGS += -DCONFIG_WCN_PCIE
endif
# ------ wcn hardware type config end ------

# ------ wcn common macro start ------
# CONFIG_WCN_BSP_DRIVER_BUILDIN ?= y
CONFIG_SC23XX = y
CONFIG_WCN_BOOT = y
# add macro for build source files
# ifneq ($(TARGET_BUILD_VARIANT), userdebug)
MARLIN_CFLAGS += -DCONFIG_WCN_USER
# endif
# MARLIN_CFLAGS += -DCONFIG_WCN_RDCDBG
MARLIN_CFLAGS += -DCONFIG_WCN_PARSE_DTS
# ------ wcn common macro end ------

# ------ wcn common inclue files start ------
ifeq ($(COUSTOM_PLATFORM), nxp)
INCLUDE_CFLAGS += -I$(srctree)/$(src)/include
INCLUDE_CFLAGS += -I$(srctree)/$(src)/platform
else
INCLUDE_CFLAGS += -I$(src)/include/
INCLUDE_CFLAGS += -I$(src)/platform/
endif
# ------ wcn common inclue files end ------

ccflags-y += -Wno-date-time

ccflags-y += $(MARLIN_CFLAGS)
ccflags-y += $(INCLUDE_CFLAGS)

$(info "wcn bsp ccflags-y: $(ccflags-y)")

#
# Final Objects
#
ifeq ($(CONFIG_WCN_BSP_DRIVER_BUILDIN), y)
# Support bsp driver build-in
obj-y := $(KO_MODULE_NAME).o
else
# Support bsp driver build module
obj-m += $(KO_MODULE_NAME).o
endif

$(KO_MODULE_NAME)-$(CONFIG_SC23XX) := wcn_bus.o

ifdef CONFIG_WCN_BOOT
# marlin3 files
$(KO_MODULE_NAME)-$(CONFIG_WCN_BOOT) += $(addprefix platform/, wcn_boot.o \
			wcn_dump.o wcn_op.o)
# wcn buf log loopcheck ...
$(KO_MODULE_NAME)-$(CONFIG_WCN_BOOT) += $(addprefix platform/, bufring.o wcn_txrx.o wcn_misc.o \
			wcn_parn_parser.o wcn_log.o wcn_procfs.o loopcheck.o reset.o \
			reset_test.o rdc_debug.o sysfs.o)
$(KO_MODULE_NAME)-$(CONFIG_WCN_PCIE) +=$(addprefix platform/,pcie_boot.o)
$(KO_MODULE_NAME)-$(CONFIG_WCN_SWD) += $(addprefix platform/,wcn_swd_dap.o)
$(KO_MODULE_NAME)-$(CONFIG_WCN_USB) += $(addprefix platform/,usb_boot.o)
ifeq ($(CONFIG_UMW2653), y)
$(KO_MODULE_NAME)-$(CONFIG_MEM_PD) += $(addprefix platform/,mem_pd_mgr_new.o)
else
$(KO_MODULE_NAME)-$(CONFIG_MEM_PD) += $(addprefix platform/,mem_pd_mgr.o)
endif
$(KO_MODULE_NAME)-$(CONFIG_WCN_UTILS) += $(addprefix platform/,wcn_debugfs.o)
$(KO_MODULE_NAME)-$(CONFIG_WCN_GNSS) +=$(addprefix platform/gnss/,gnss_common_ctl.o \
			gnss_pmnotify_ctl.o gnss_dbg.o gnss_dump.o)
endif  # CONFIG_WCN_BOOT

ifdef CONFIG_WCN_SDIO
$(KO_MODULE_NAME)-$(CONFIG_WCN_SDIO) += $(addprefix sdio/,sdiohal_main.o sdiohal_common.o \
			sdiohal_tx.o sdiohal_rx.o sdiohal_if.o)

$(KO_MODULE_NAME)-$(CONFIG_DEBUG_FS) += $(addprefix sdio/,sdiohal_ctl.o)
endif  # CONFIG_WCN_SDIO

ifdef CONFIG_WCN_PCIE
$(KO_MODULE_NAME)-$(CONFIG_WCN_PCIE) += $(addprefix pcie/,pcie.o edma_engine.o pcie_dbg.o \
			ioctl.o mchn.o edma_test.o pcie_attach_bus.o pcie_pm.o)
endif  # CONFIG_WCN_PCIE

ifdef CONFIG_WCN_SLP
$(KO_MODULE_NAME)-$(CONFIG_WCN_SLP) += $(addprefix sleep/,sdio_int.o slp_mgr.o slp_sdio.o \
			slp_test.o)
endif  # CONFIG_WCN_SLP

ifdef CONFIG_WCN_USB
$(KO_MODULE_NAME)-$(CONFIG_WCN_USB) += $(addprefix usb/,wcn_usb.o wcn_usb_rx_tx.o \
			wcn_usb_store.o wcn_usb_io.o wcn_usb_test.o wcn_usb_download.o)
endif  # CONFIG_WCN_USB
